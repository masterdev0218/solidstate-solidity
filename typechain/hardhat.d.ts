/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from '.';
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomiclabs/hardhat-ethers/types';
import { ethers } from 'ethers';

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'AccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: 'AccessControlInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AccessControlInternal__factory>;
    getContractFactory(
      name: 'AccessControlMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AccessControlMock__factory>;
    getContractFactory(
      name: 'IAccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: 'IAccessControlInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IAccessControlInternal__factory>;
    getContractFactory(
      name: 'IERC173',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: 'Ownable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: 'OwnableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.OwnableMock__factory>;
    getContractFactory(
      name: 'SafeOwnable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SafeOwnable__factory>;
    getContractFactory(
      name: 'SafeOwnableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SafeOwnableMock__factory>;
    getContractFactory(
      name: 'ECDSAMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ECDSAMock__factory>;
    getContractFactory(
      name: 'MerkleProofMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MerkleProofMock__factory>;
    getContractFactory(
      name: 'CloneFactoryMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.CloneFactoryMock__factory>;
    getContractFactory(
      name: 'FactoryMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.FactoryMock__factory>;
    getContractFactory(
      name: 'MetamorphicFactory',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MetamorphicFactory__factory>;
    getContractFactory(
      name: 'MetamorphicFactoryMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MetamorphicFactoryMock__factory>;
    getContractFactory(
      name: 'MinimalProxyFactoryMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MinimalProxyFactoryMock__factory>;
    getContractFactory(
      name: 'ERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: 'ERC165Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165Mock__factory>;
    getContractFactory(
      name: 'IERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: 'ECDSAMultisigWallet',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ECDSAMultisigWallet__factory>;
    getContractFactory(
      name: 'ECDSAMultisigWalletMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ECDSAMultisigWalletMock__factory>;
    getContractFactory(
      name: 'Diamond',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: 'DiamondBase',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondBase__factory>;
    getContractFactory(
      name: 'DiamondBaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondBaseMock__factory>;
    getContractFactory(
      name: 'DiamondBaseStorage',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondBaseStorage__factory>;
    getContractFactory(
      name: 'DiamondCuttable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondCuttable__factory>;
    getContractFactory(
      name: 'DiamondCuttableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondCuttableMock__factory>;
    getContractFactory(
      name: 'DiamondLoupe',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondLoupe__factory>;
    getContractFactory(
      name: 'DiamondLoupeMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondLoupeMock__factory>;
    getContractFactory(
      name: 'DiamondMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.DiamondMock__factory>;
    getContractFactory(
      name: 'IDiamondCuttable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondCuttable__factory>;
    getContractFactory(
      name: 'IDiamondLoupe',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: 'ManagedProxy',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ManagedProxy__factory>;
    getContractFactory(
      name: 'ManagedProxyMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ManagedProxyMock__factory>;
    getContractFactory(
      name: 'ManagedProxyOwnable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ManagedProxyOwnable__factory>;
    getContractFactory(
      name: 'ManagedProxyOwnableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ManagedProxyOwnableMock__factory>;
    getContractFactory(
      name: 'Proxy',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: 'ProxyMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ProxyMock__factory>;
    getContractFactory(
      name: 'UpgradeableProxy',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.UpgradeableProxy__factory>;
    getContractFactory(
      name: 'UpgradeableProxyMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.UpgradeableProxyMock__factory>;
    getContractFactory(
      name: 'UpgradeableProxyOwnable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.UpgradeableProxyOwnable__factory>;
    getContractFactory(
      name: 'UpgradeableProxyOwnableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.UpgradeableProxyOwnableMock__factory>;
    getContractFactory(
      name: 'ERC1271Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1271Base__factory>;
    getContractFactory(
      name: 'IERC1271',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: 'ERC1271Ownable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1271Ownable__factory>;
    getContractFactory(
      name: 'ERC1271OwnableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1271OwnableMock__factory>;
    getContractFactory(
      name: 'ERC1271Stored',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1271Stored__factory>;
    getContractFactory(
      name: 'ERC1271StoredMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1271StoredMock__factory>;
    getContractFactory(
      name: 'ERC1155Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155Base__factory>;
    getContractFactory(
      name: 'ERC1155BaseInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155BaseInternal__factory>;
    getContractFactory(
      name: 'ERC1155BaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155BaseMock__factory>;
    getContractFactory(
      name: 'ERC1155Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155Enumerable__factory>;
    getContractFactory(
      name: 'ERC1155EnumerableInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155EnumerableInternal__factory>;
    getContractFactory(
      name: 'ERC1155EnumerableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155EnumerableMock__factory>;
    getContractFactory(
      name: 'IERC1155Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Enumerable__factory>;
    getContractFactory(
      name: 'ERC1155',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: 'ERC1155Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155Mock__factory>;
    getContractFactory(
      name: 'IERC1155',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: 'IERC1155Internal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Internal__factory>;
    getContractFactory(
      name: 'IERC1155Receiver',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: 'ERC1155Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155Metadata__factory>;
    getContractFactory(
      name: 'ERC1155MetadataInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155MetadataInternal__factory>;
    getContractFactory(
      name: 'ERC1155MetadataMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155MetadataMock__factory>;
    getContractFactory(
      name: 'IERC1155Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Metadata__factory>;
    getContractFactory(
      name: 'IERC1155MetadataInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155MetadataInternal__factory>;
    getContractFactory(
      name: 'ERC1404Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1404Base__factory>;
    getContractFactory(
      name: 'ERC1404BaseInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1404BaseInternal__factory>;
    getContractFactory(
      name: 'ERC1404BaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1404BaseMock__factory>;
    getContractFactory(
      name: 'ERC1404',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1404__factory>;
    getContractFactory(
      name: 'ERC1404Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1404Mock__factory>;
    getContractFactory(
      name: 'IERC1404',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1404__factory>;
    getContractFactory(
      name: 'ERC20Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: 'ERC20BaseInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20BaseInternal__factory>;
    getContractFactory(
      name: 'ERC20BaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20BaseMock__factory>;
    getContractFactory(
      name: 'ERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: 'ERC20Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: 'ERC20Extended',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Extended__factory>;
    getContractFactory(
      name: 'ERC20ExtendedMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20ExtendedMock__factory>;
    getContractFactory(
      name: 'IERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: 'IERC20Internal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Internal__factory>;
    getContractFactory(
      name: 'ERC20ImplicitApproval',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20ImplicitApproval__factory>;
    getContractFactory(
      name: 'ERC20ImplicitApprovalMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20ImplicitApprovalMock__factory>;
    getContractFactory(
      name: 'ERC20Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Metadata__factory>;
    getContractFactory(
      name: 'ERC20MetadataMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20MetadataMock__factory>;
    getContractFactory(
      name: 'IERC20Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: 'ERC20Permit',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: 'ERC20PermitMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20PermitMock__factory>;
    getContractFactory(
      name: 'IERC2612',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC2612__factory>;
    getContractFactory(
      name: 'ERC20Snapshot',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Snapshot__factory>;
    getContractFactory(
      name: 'ERC20SnapshotInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20SnapshotInternal__factory>;
    getContractFactory(
      name: 'ERC4626Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC4626Base__factory>;
    getContractFactory(
      name: 'ERC4626BaseInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC4626BaseInternal__factory>;
    getContractFactory(
      name: 'ERC4626BaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC4626BaseMock__factory>;
    getContractFactory(
      name: 'ERC4626',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC4626__factory>;
    getContractFactory(
      name: 'ERC4626Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC4626Mock__factory>;
    getContractFactory(
      name: 'IERC4626',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: 'IERC4626Internal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC4626Internal__factory>;
    getContractFactory(
      name: 'ERC721Base',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: 'ERC721BaseInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721BaseInternal__factory>;
    getContractFactory(
      name: 'ERC721BaseMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721BaseMock__factory>;
    getContractFactory(
      name: 'ERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: 'ERC721EnumerableMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721EnumerableMock__factory>;
    getContractFactory(
      name: 'IERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: 'ERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: 'ERC721Mock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Mock__factory>;
    getContractFactory(
      name: 'IERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: 'IERC721Internal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Internal__factory>;
    getContractFactory(
      name: 'IERC721Receiver',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: 'ERC721Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: 'ERC721MetadataInternal',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721MetadataInternal__factory>;
    getContractFactory(
      name: 'ERC721MetadataMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721MetadataMock__factory>;
    getContractFactory(
      name: 'IERC721Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: 'AddressUtilsMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AddressUtilsMock__factory>;
    getContractFactory(
      name: 'ArrayUtilsMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ArrayUtilsMock__factory>;
    getContractFactory(
      name: 'IMulticall',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: 'IWETH',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: 'MathMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MathMock__factory>;
    getContractFactory(
      name: 'Multicall',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: 'MulticallMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MulticallMock__factory>;
    getContractFactory(
      name: 'ReentrancyGuardMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ReentrancyGuardMock__factory>;
    getContractFactory(
      name: 'UintUtilsMock',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.UintUtilsMock__factory>;

    getContractAt(
      name: 'AccessControl',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: 'AccessControlInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.AccessControlInternal>;
    getContractAt(
      name: 'AccessControlMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.AccessControlMock>;
    getContractAt(
      name: 'IAccessControl',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: 'IAccessControlInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IAccessControlInternal>;
    getContractAt(
      name: 'IERC173',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: 'Ownable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: 'OwnableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.OwnableMock>;
    getContractAt(
      name: 'SafeOwnable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.SafeOwnable>;
    getContractAt(
      name: 'SafeOwnableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.SafeOwnableMock>;
    getContractAt(
      name: 'ECDSAMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ECDSAMock>;
    getContractAt(
      name: 'MerkleProofMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MerkleProofMock>;
    getContractAt(
      name: 'CloneFactoryMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.CloneFactoryMock>;
    getContractAt(
      name: 'FactoryMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.FactoryMock>;
    getContractAt(
      name: 'MetamorphicFactory',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MetamorphicFactory>;
    getContractAt(
      name: 'MetamorphicFactoryMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MetamorphicFactoryMock>;
    getContractAt(
      name: 'MinimalProxyFactoryMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MinimalProxyFactoryMock>;
    getContractAt(
      name: 'ERC165',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: 'ERC165Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC165Mock>;
    getContractAt(
      name: 'IERC165',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: 'ECDSAMultisigWallet',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ECDSAMultisigWallet>;
    getContractAt(
      name: 'ECDSAMultisigWalletMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ECDSAMultisigWalletMock>;
    getContractAt(
      name: 'Diamond',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: 'DiamondBase',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondBase>;
    getContractAt(
      name: 'DiamondBaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondBaseMock>;
    getContractAt(
      name: 'DiamondBaseStorage',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondBaseStorage>;
    getContractAt(
      name: 'DiamondCuttable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondCuttable>;
    getContractAt(
      name: 'DiamondCuttableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondCuttableMock>;
    getContractAt(
      name: 'DiamondLoupe',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondLoupe>;
    getContractAt(
      name: 'DiamondLoupeMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondLoupeMock>;
    getContractAt(
      name: 'DiamondMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.DiamondMock>;
    getContractAt(
      name: 'IDiamondCuttable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IDiamondCuttable>;
    getContractAt(
      name: 'IDiamondLoupe',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: 'ManagedProxy',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ManagedProxy>;
    getContractAt(
      name: 'ManagedProxyMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ManagedProxyMock>;
    getContractAt(
      name: 'ManagedProxyOwnable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ManagedProxyOwnable>;
    getContractAt(
      name: 'ManagedProxyOwnableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ManagedProxyOwnableMock>;
    getContractAt(
      name: 'Proxy',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: 'ProxyMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ProxyMock>;
    getContractAt(
      name: 'UpgradeableProxy',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.UpgradeableProxy>;
    getContractAt(
      name: 'UpgradeableProxyMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.UpgradeableProxyMock>;
    getContractAt(
      name: 'UpgradeableProxyOwnable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.UpgradeableProxyOwnable>;
    getContractAt(
      name: 'UpgradeableProxyOwnableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.UpgradeableProxyOwnableMock>;
    getContractAt(
      name: 'ERC1271Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1271Base>;
    getContractAt(
      name: 'IERC1271',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: 'ERC1271Ownable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1271Ownable>;
    getContractAt(
      name: 'ERC1271OwnableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1271OwnableMock>;
    getContractAt(
      name: 'ERC1271Stored',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1271Stored>;
    getContractAt(
      name: 'ERC1271StoredMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1271StoredMock>;
    getContractAt(
      name: 'ERC1155Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155Base>;
    getContractAt(
      name: 'ERC1155BaseInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155BaseInternal>;
    getContractAt(
      name: 'ERC1155BaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155BaseMock>;
    getContractAt(
      name: 'ERC1155Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155Enumerable>;
    getContractAt(
      name: 'ERC1155EnumerableInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155EnumerableInternal>;
    getContractAt(
      name: 'ERC1155EnumerableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155EnumerableMock>;
    getContractAt(
      name: 'IERC1155Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Enumerable>;
    getContractAt(
      name: 'ERC1155',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: 'ERC1155Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155Mock>;
    getContractAt(
      name: 'IERC1155',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: 'IERC1155Internal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Internal>;
    getContractAt(
      name: 'IERC1155Receiver',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: 'ERC1155Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155Metadata>;
    getContractAt(
      name: 'ERC1155MetadataInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155MetadataInternal>;
    getContractAt(
      name: 'ERC1155MetadataMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1155MetadataMock>;
    getContractAt(
      name: 'IERC1155Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Metadata>;
    getContractAt(
      name: 'IERC1155MetadataInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155MetadataInternal>;
    getContractAt(
      name: 'ERC1404Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1404Base>;
    getContractAt(
      name: 'ERC1404BaseInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1404BaseInternal>;
    getContractAt(
      name: 'ERC1404BaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1404BaseMock>;
    getContractAt(
      name: 'ERC1404',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1404>;
    getContractAt(
      name: 'ERC1404Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1404Mock>;
    getContractAt(
      name: 'IERC1404',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1404>;
    getContractAt(
      name: 'ERC20Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: 'ERC20BaseInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20BaseInternal>;
    getContractAt(
      name: 'ERC20BaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20BaseMock>;
    getContractAt(
      name: 'ERC20',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: 'ERC20Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: 'ERC20Extended',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Extended>;
    getContractAt(
      name: 'ERC20ExtendedMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20ExtendedMock>;
    getContractAt(
      name: 'IERC20',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: 'IERC20Internal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Internal>;
    getContractAt(
      name: 'ERC20ImplicitApproval',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20ImplicitApproval>;
    getContractAt(
      name: 'ERC20ImplicitApprovalMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20ImplicitApprovalMock>;
    getContractAt(
      name: 'ERC20Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Metadata>;
    getContractAt(
      name: 'ERC20MetadataMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20MetadataMock>;
    getContractAt(
      name: 'IERC20Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: 'ERC20Permit',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: 'ERC20PermitMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20PermitMock>;
    getContractAt(
      name: 'IERC2612',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC2612>;
    getContractAt(
      name: 'ERC20Snapshot',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Snapshot>;
    getContractAt(
      name: 'ERC20SnapshotInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20SnapshotInternal>;
    getContractAt(
      name: 'ERC4626Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC4626Base>;
    getContractAt(
      name: 'ERC4626BaseInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC4626BaseInternal>;
    getContractAt(
      name: 'ERC4626BaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC4626BaseMock>;
    getContractAt(
      name: 'ERC4626',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC4626>;
    getContractAt(
      name: 'ERC4626Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC4626Mock>;
    getContractAt(
      name: 'IERC4626',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: 'IERC4626Internal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC4626Internal>;
    getContractAt(
      name: 'ERC721Base',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: 'ERC721BaseInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721BaseInternal>;
    getContractAt(
      name: 'ERC721BaseMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721BaseMock>;
    getContractAt(
      name: 'ERC721Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: 'ERC721EnumerableMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721EnumerableMock>;
    getContractAt(
      name: 'IERC721Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: 'ERC721',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: 'ERC721Mock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Mock>;
    getContractAt(
      name: 'IERC721',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: 'IERC721Internal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Internal>;
    getContractAt(
      name: 'IERC721Receiver',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: 'ERC721Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: 'ERC721MetadataInternal',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721MetadataInternal>;
    getContractAt(
      name: 'ERC721MetadataMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721MetadataMock>;
    getContractAt(
      name: 'IERC721Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: 'AddressUtilsMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.AddressUtilsMock>;
    getContractAt(
      name: 'ArrayUtilsMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ArrayUtilsMock>;
    getContractAt(
      name: 'IMulticall',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: 'IWETH',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: 'MathMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MathMock>;
    getContractAt(
      name: 'Multicall',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: 'MulticallMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.MulticallMock>;
    getContractAt(
      name: 'ReentrancyGuardMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ReentrancyGuardMock>;
    getContractAt(
      name: 'UintUtilsMock',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.UintUtilsMock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>;
  }
}
