/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from '../../../common';
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

export interface ERC1155BaseMockInterface extends utils.Interface {
  functions: {
    '__burn(address,uint256,uint256)': FunctionFragment;
    '__burnBatch(address,uint256[],uint256[])': FunctionFragment;
    '__mint(address,uint256,uint256)': FunctionFragment;
    '__mintBatch(address,uint256[],uint256[])': FunctionFragment;
    '__safeMint(address,uint256,uint256)': FunctionFragment;
    '__safeMintBatch(address,uint256[],uint256[])': FunctionFragment;
    '__safeTransfer(address,address,address,uint256,uint256,bytes)': FunctionFragment;
    '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)': FunctionFragment;
    '__transfer(address,address,address,uint256,uint256,bytes)': FunctionFragment;
    '__transferBatch(address,address,address,uint256[],uint256[],bytes)': FunctionFragment;
    'balanceOf(address,uint256)': FunctionFragment;
    'balanceOfBatch(address[],uint256[])': FunctionFragment;
    'isApprovedForAll(address,address)': FunctionFragment;
    'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)': FunctionFragment;
    'safeTransferFrom(address,address,uint256,uint256,bytes)': FunctionFragment;
    'setApprovalForAll(address,bool)': FunctionFragment;
    'supportsInterface(bytes4)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | '__burn'
      | '__burn(address,uint256,uint256)'
      | '__burnBatch'
      | '__burnBatch(address,uint256[],uint256[])'
      | '__mint'
      | '__mint(address,uint256,uint256)'
      | '__mintBatch'
      | '__mintBatch(address,uint256[],uint256[])'
      | '__safeMint'
      | '__safeMint(address,uint256,uint256)'
      | '__safeMintBatch'
      | '__safeMintBatch(address,uint256[],uint256[])'
      | '__safeTransfer'
      | '__safeTransfer(address,address,address,uint256,uint256,bytes)'
      | '__safeTransferBatch'
      | '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'
      | '__transfer'
      | '__transfer(address,address,address,uint256,uint256,bytes)'
      | '__transferBatch'
      | '__transferBatch(address,address,address,uint256[],uint256[],bytes)'
      | 'balanceOf'
      | 'balanceOf(address,uint256)'
      | 'balanceOfBatch'
      | 'balanceOfBatch(address[],uint256[])'
      | 'isApprovedForAll'
      | 'isApprovedForAll(address,address)'
      | 'safeBatchTransferFrom'
      | 'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'
      | 'safeTransferFrom'
      | 'safeTransferFrom(address,address,uint256,uint256,bytes)'
      | 'setApprovalForAll'
      | 'setApprovalForAll(address,bool)'
      | 'supportsInterface'
      | 'supportsInterface(bytes4)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: '__burn',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__burn(address,uint256,uint256)',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__burnBatch',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__burnBatch(address,uint256[],uint256[])',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__mint',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__mint(address,uint256,uint256)',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__mintBatch',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__mintBatch(address,uint256[],uint256[])',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeMint',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeMint(address,uint256,uint256)',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeMintBatch',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeMintBatch(address,uint256[],uint256[])',
    values: [string, BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeTransfer',
    values: [string, string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeTransfer(address,address,address,uint256,uint256,bytes)',
    values: [string, string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeTransferBatch',
    values: [string, string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)',
    values: [string, string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__transfer',
    values: [string, string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__transfer(address,address,address,uint256,uint256,bytes)',
    values: [string, string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__transferBatch',
    values: [string, string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: '__transferBatch(address,address,address,uint256[],uint256[],bytes)',
    values: [string, string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'balanceOf',
    values: [string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'balanceOf(address,uint256)',
    values: [string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'balanceOfBatch',
    values: [string[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'balanceOfBatch(address[],uint256[])',
    values: [string[], BigNumberish[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'isApprovedForAll',
    values: [string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'isApprovedForAll(address,address)',
    values: [string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'safeBatchTransferFrom',
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)',
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'safeTransferFrom',
    values: [string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'safeTransferFrom(address,address,uint256,uint256,bytes)',
    values: [string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'setApprovalForAll',
    values: [string, boolean],
  ): string;
  encodeFunctionData(
    functionFragment: 'setApprovalForAll(address,bool)',
    values: [string, boolean],
  ): string;
  encodeFunctionData(
    functionFragment: 'supportsInterface',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'supportsInterface(bytes4)',
    values: [BytesLike],
  ): string;

  decodeFunctionResult(functionFragment: '__burn', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: '__burn(address,uint256,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__burnBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__burnBatch(address,uint256[],uint256[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: '__mint', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: '__mint(address,uint256,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__mintBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__mintBatch(address,uint256[],uint256[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: '__safeMint', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: '__safeMint(address,uint256,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeMintBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeMintBatch(address,uint256[],uint256[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeTransfer',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeTransfer(address,address,address,uint256,uint256,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeTransferBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: '__transfer', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: '__transfer(address,address,address,uint256,uint256,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__transferBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: '__transferBatch(address,address,address,uint256[],uint256[],bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'balanceOf(address,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'balanceOfBatch',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'balanceOfBatch(address[],uint256[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isApprovedForAll',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isApprovedForAll(address,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'safeBatchTransferFrom',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'safeTransferFrom',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'safeTransferFrom(address,address,uint256,uint256,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setApprovalForAll',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setApprovalForAll(address,bool)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'supportsInterface',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'supportsInterface(bytes4)',
    data: BytesLike,
  ): Result;

  events: {
    'ApprovalForAll(address,address,bool)': EventFragment;
    'TransferBatch(address,address,address,uint256[],uint256[])': EventFragment;
    'TransferSingle(address,address,address,uint256,uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'ApprovalForAll'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'ApprovalForAll(address,address,bool)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'TransferBatch'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'TransferBatch(address,address,address,uint256[],uint256[])',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'TransferSingle'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'TransferSingle(address,address,address,uint256,uint256)',
  ): EventFragment;
}

export interface ApprovalForAllEventObject {
  account: string;
  operator: string;
  approved: boolean;
}
export type ApprovalForAllEvent = TypedEvent<
  [string, string, boolean],
  ApprovalForAllEventObject
>;

export type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;

export interface TransferBatchEventObject {
  operator: string;
  from: string;
  to: string;
  ids: BigNumber[];
  values: BigNumber[];
}
export type TransferBatchEvent = TypedEvent<
  [string, string, string, BigNumber[], BigNumber[]],
  TransferBatchEventObject
>;

export type TransferBatchEventFilter = TypedEventFilter<TransferBatchEvent>;

export interface TransferSingleEventObject {
  operator: string;
  from: string;
  to: string;
  id: BigNumber;
  value: BigNumber;
}
export type TransferSingleEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  TransferSingleEventObject
>;

export type TransferSingleEventFilter = TypedEventFilter<TransferSingleEvent>;

export interface ERC1155BaseMock extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ERC1155BaseMockInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    __burn(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__burn(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __burnBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__burnBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __mint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__mint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __mintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__mintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __safeMint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__safeMint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __safeMintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__safeMintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __safeTransfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__safeTransfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __safeTransferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __transfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__transfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    __transferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    '__transferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    balanceOf(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    'balanceOf(address,uint256)'(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    balanceOfBatch(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<[BigNumber[]]>;

    'balanceOfBatch(address[],uint256[])'(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<[BigNumber[]]>;

    isApprovedForAll(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    'isApprovedForAll(address,address)'(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    safeBatchTransferFrom(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'safeTransferFrom(address,address,uint256,uint256,bytes)'(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'setApprovalForAll(address,bool)'(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    'supportsInterface(bytes4)'(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;
  };

  __burn(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__burn(address,uint256,uint256)'(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __burnBatch(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__burnBatch(address,uint256[],uint256[])'(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __mint(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__mint(address,uint256,uint256)'(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __mintBatch(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__mintBatch(address,uint256[],uint256[])'(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __safeMint(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__safeMint(address,uint256,uint256)'(
    account: string,
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __safeMintBatch(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__safeMintBatch(address,uint256[],uint256[])'(
    account: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __safeTransfer(
    operator: string,
    sender: string,
    recipient: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__safeTransfer(address,address,address,uint256,uint256,bytes)'(
    operator: string,
    sender: string,
    recipient: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __safeTransferBatch(
    operator: string,
    sender: string,
    recipient: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'(
    operator: string,
    sender: string,
    recipient: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __transfer(
    operator: string,
    sender: string,
    recipient: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__transfer(address,address,address,uint256,uint256,bytes)'(
    operator: string,
    sender: string,
    recipient: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  __transferBatch(
    operator: string,
    sender: string,
    recipient: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  '__transferBatch(address,address,address,uint256[],uint256[],bytes)'(
    operator: string,
    sender: string,
    recipient: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  balanceOf(
    account: string,
    id: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'balanceOf(address,uint256)'(
    account: string,
    id: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  balanceOfBatch(
    accounts: string[],
    ids: BigNumberish[],
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>;

  'balanceOfBatch(address[],uint256[])'(
    accounts: string[],
    ids: BigNumberish[],
    overrides?: CallOverrides,
  ): Promise<BigNumber[]>;

  isApprovedForAll(
    account: string,
    operator: string,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'isApprovedForAll(address,address)'(
    account: string,
    operator: string,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  safeBatchTransferFrom(
    from: string,
    to: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'(
    from: string,
    to: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  safeTransferFrom(
    from: string,
    to: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'safeTransferFrom(address,address,uint256,uint256,bytes)'(
    from: string,
    to: string,
    id: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    status: boolean,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'setApprovalForAll(address,bool)'(
    operator: string,
    status: boolean,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'supportsInterface(bytes4)'(
    interfaceId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  callStatic: {
    __burn(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__burn(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    __burnBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    '__burnBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    __mint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__mint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    __mintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    '__mintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    __safeMint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__safeMint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    __safeMintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    '__safeMintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    __safeTransfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__safeTransfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    __safeTransferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    __transfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__transfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    __transferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    '__transferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    balanceOf(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'balanceOf(address,uint256)'(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    balanceOfBatch(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>;

    'balanceOfBatch(address[],uint256[])'(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<BigNumber[]>;

    isApprovedForAll(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'isApprovedForAll(address,address)'(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    safeBatchTransferFrom(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'safeTransferFrom(address,address,uint256,uint256,bytes)'(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    setApprovalForAll(
      operator: string,
      status: boolean,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setApprovalForAll(address,bool)'(
      operator: string,
      status: boolean,
      overrides?: CallOverrides,
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'supportsInterface(bytes4)'(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;
  };

  filters: {
    'ApprovalForAll(address,address,bool)'(
      account?: string | null,
      operator?: string | null,
      approved?: null,
    ): ApprovalForAllEventFilter;
    ApprovalForAll(
      account?: string | null,
      operator?: string | null,
      approved?: null,
    ): ApprovalForAllEventFilter;

    'TransferBatch(address,address,address,uint256[],uint256[])'(
      operator?: string | null,
      from?: string | null,
      to?: string | null,
      ids?: null,
      values?: null,
    ): TransferBatchEventFilter;
    TransferBatch(
      operator?: string | null,
      from?: string | null,
      to?: string | null,
      ids?: null,
      values?: null,
    ): TransferBatchEventFilter;

    'TransferSingle(address,address,address,uint256,uint256)'(
      operator?: string | null,
      from?: string | null,
      to?: string | null,
      id?: null,
      value?: null,
    ): TransferSingleEventFilter;
    TransferSingle(
      operator?: string | null,
      from?: string | null,
      to?: string | null,
      id?: null,
      value?: null,
    ): TransferSingleEventFilter;
  };

  estimateGas: {
    __burn(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__burn(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __burnBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__burnBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __mint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__mint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __mintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__mintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __safeMint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__safeMint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __safeMintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__safeMintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __safeTransfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__safeTransfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __safeTransferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __transfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__transfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    __transferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    '__transferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    balanceOf(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'balanceOf(address,uint256)'(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    balanceOfBatch(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'balanceOfBatch(address[],uint256[])'(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    isApprovedForAll(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'isApprovedForAll(address,address)'(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    safeBatchTransferFrom(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'safeTransferFrom(address,address,uint256,uint256,bytes)'(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'setApprovalForAll(address,bool)'(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'supportsInterface(bytes4)'(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    __burn(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__burn(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __burnBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__burnBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __mint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__mint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __mintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__mintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __safeMint(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__safeMint(address,uint256,uint256)'(
      account: string,
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __safeMintBatch(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__safeMintBatch(address,uint256[],uint256[])'(
      account: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __safeTransfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__safeTransfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __safeTransferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__safeTransferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __transfer(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__transfer(address,address,address,uint256,uint256,bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    __transferBatch(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    '__transferBatch(address,address,address,uint256[],uint256[],bytes)'(
      operator: string,
      sender: string,
      recipient: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    balanceOf(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'balanceOf(address,uint256)'(
      account: string,
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    balanceOfBatch(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'balanceOfBatch(address[],uint256[])'(
      accounts: string[],
      ids: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'isApprovedForAll(address,address)'(
      account: string,
      operator: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    safeBatchTransferFrom(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)'(
      from: string,
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    safeTransferFrom(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'safeTransferFrom(address,address,uint256,uint256,bytes)'(
      from: string,
      to: string,
      id: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'setApprovalForAll(address,bool)'(
      operator: string,
      status: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'supportsInterface(bytes4)'(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
