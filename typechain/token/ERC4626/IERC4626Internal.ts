/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from '../../common';
import type { EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { BaseContract, BigNumber, Signer, utils } from 'ethers';

export interface IERC4626InternalInterface extends utils.Interface {
  functions: {};

  events: {
    'Deposit(address,address,uint256,uint256)': EventFragment;
    'Withdraw(address,address,address,uint256,uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'Deposit'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'Deposit(address,address,uint256,uint256)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Withdraw'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'Withdraw(address,address,address,uint256,uint256)',
  ): EventFragment;
}

export interface DepositEventObject {
  caller: string;
  owner: string;
  assets: BigNumber;
  shares: BigNumber;
}
export type DepositEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  DepositEventObject
>;

export type DepositEventFilter = TypedEventFilter<DepositEvent>;

export interface WithdrawEventObject {
  caller: string;
  receiver: string;
  owner: string;
  assets: BigNumber;
  shares: BigNumber;
}
export type WithdrawEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  WithdrawEventObject
>;

export type WithdrawEventFilter = TypedEventFilter<WithdrawEvent>;

export interface IERC4626Internal extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IERC4626InternalInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    'Deposit(address,address,uint256,uint256)'(
      caller?: string | null,
      owner?: string | null,
      assets?: null,
      shares?: null,
    ): DepositEventFilter;
    Deposit(
      caller?: string | null,
      owner?: string | null,
      assets?: null,
      shares?: null,
    ): DepositEventFilter;

    'Withdraw(address,address,address,uint256,uint256)'(
      caller?: string | null,
      receiver?: string | null,
      owner?: string | null,
      assets?: null,
      shares?: null,
    ): WithdrawEventFilter;
    Withdraw(
      caller?: string | null,
      receiver?: string | null,
      owner?: string | null,
      assets?: null,
      shares?: null,
    ): WithdrawEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
