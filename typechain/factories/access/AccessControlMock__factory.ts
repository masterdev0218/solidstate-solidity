/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  AccessControlMock,
  AccessControlMockInterface,
} from '../../access/AccessControlMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'checkRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'roleId',
        type: 'bytes32',
      },
    ],
    name: 'senderProtected',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'roleId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'adminRoleId',
        type: 'bytes32',
      },
    ],
    name: 'setRoleAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516109a73803806109a783398101604081905261002f9161012f565b61003a60003361004b565b61004560008261004b565b5061015f565b61005582826100cd565b6100c957600161006d61010b60201b61026b1760201c565b6000848152602091825260408082206001600160a01b0386168084529352808220805460ff1916941515949094179093559151339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45b5050565b60006100e161010b60201b61026b1760201c565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b7fd3889cc5458b268d0544e5534672df1296288ca3f93cbd39bd6f497a5c62281190565b60006020828403121561014157600080fd5b81516001600160a01b038116811461015857600080fd5b9392505050565b6108398061016e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80634b9304a4116100665780634b9304a4146100f957806391d148541461010c578063a217fddf1461012f578063c5b9519014610137578063d547741f1461014a57600080fd5b80631e4e009114610098578063248a9ca3146100ad5780632f2ff15d146100d357806336568abe146100e6575b600080fd5b6100ab6100a636600461063b565b61015d565b005b6100c06100bb36600461065d565b61016b565b6040519081526020015b60405180910390f35b6100ab6100e1366004610676565b61017c565b6100ab6100f4366004610676565b61019d565b6100ab61010736600461065d565b61021c565b61011f61011a366004610676565b610226565b60405190151581526020016100ca565b6100c0600081565b61011f61014536600461065d565b610239565b6100ab610158366004610676565b61024f565b610167828261028f565b5050565b6000610176826102ec565b92915050565b610185826102ec565b61018e8161030a565b6101988383610317565b505050565b6001600160a01b03811633146102125760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610167828261038e565b806101678161030a565b60006102328383610406565b9392505050565b6000816102458161030a565b6102328333610406565b6102588261016b565b6102618161030a565b610198838361038e565b7fd3889cc5458b268d0544e5534672df1296288ca3f93cbd39bd6f497a5c62281190565b600061029a836102ec565b9050816102a561026b565b600085815260209190915260408082206001019290925590518391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff91a4505050565b60006102f661026b565b600092835260205250604090206001015490565b610314813361043a565b50565b6103218282610406565b61016757600161032f61026b565b6000848152602091825260408082206001600160a01b0386168084529352808220805460ff1916941515949094179093559151339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6103988282610406565b156101675760006103a761026b565b6000848152602091825260408082206001600160a01b0386168084529352808220805460ff1916941515949094179093559151339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061041061026b565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b6104448282610406565b6101675761045a816001600160a01b031661049c565b6104658360206104ae565b6040516020016104769291906106e2565b60408051601f198184030181529082905262461bcd60e51b825261020991600401610757565b60606101766001600160a01b03831660145b606060006104bd8360026107a0565b6104c89060026107bf565b67ffffffffffffffff8111156104e0576104e06107d7565b6040519080825280601f01601f19166020018201604052801561050a576020820181803683370190505b509050600360fc1b81600081518110610525576105256107ed565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610554576105546107ed565b60200101906001600160f81b031916908160001a905350600160028402015b60018111156105e1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106105a4576105a46107ed565b1a60f81b8282815181106105ba576105ba6107ed565b60200101906001600160f81b031916908160001a90535060049490941c9360001901610573565b5083156102325760405162461bcd60e51b815260206004820152602260248201527f55696e745574696c733a20686578206c656e67746820696e73756666696369656044820152611b9d60f21b6064820152608401610209565b6000806040838503121561064e57600080fd5b50508035926020909101359150565b60006020828403121561066f57600080fd5b5035919050565b6000806040838503121561068957600080fd5b8235915060208301356001600160a01b03811681146106a757600080fd5b809150509250929050565b60005b838110156106cd5781810151838201526020016106b5565b838111156106dc576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161071a8160178501602088016106b2565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161074b8160288401602088016106b2565b01602801949350505050565b60208152600082518060208401526107768160408501602087016106b2565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156107ba576107ba61078a565b500290565b600082198211156107d2576107d261078a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212200d9486c316f9b6423db7beca042970a002c5d8651e7bce7afb192ac1f52aa6e964736f6c634300080a0033';

type AccessControlMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlMock__factory extends ContractFactory {
  constructor(...args: AccessControlMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    admin: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<AccessControlMock> {
    return super.deploy(admin, overrides || {}) as Promise<AccessControlMock>;
  }
  override getDeployTransaction(
    admin: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(admin, overrides || {});
  }
  override attach(address: string): AccessControlMock {
    return super.attach(address) as AccessControlMock;
  }
  override connect(signer: Signer): AccessControlMock__factory {
    return super.connect(signer) as AccessControlMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlMockInterface {
    return new utils.Interface(_abi) as AccessControlMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AccessControlMock {
    return new Contract(address, _abi, signerOrProvider) as AccessControlMock;
  }
}
