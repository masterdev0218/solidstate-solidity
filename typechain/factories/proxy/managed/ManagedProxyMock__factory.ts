/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ManagedProxyMock,
  ManagedProxyMockInterface,
} from '../../../proxy/managed/ManagedProxyMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'manager',
        type: 'address',
      },
      {
        internalType: 'bytes4',
        name: 'managerSelector',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [],
    name: '__getImplementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'manager',
        type: 'address',
      },
    ],
    name: 'setManager',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161041b38038061041b83398101604081905261002f9161005f565b6001600160e01b03198116608052600080546001600160a01b0319166001600160a01b03841617905550506100b2565b6000806040838503121561007257600080fd5b82516001600160a01b038116811461008957600080fd5b60208401519092506001600160e01b0319811681146100a757600080fd5b809150509250929050565b60805161034e6100cd6000396000610164015261034e6000f3fe60806040526004361061002d5760003560e01c8063d0ebdbe7146100cf578063d433c57e1461010e57610034565b3661003457005b600061003e61013f565b90506001600160a01b0381163b6100ab5760405162461bcd60e51b815260206004820152602660248201527f50726f78793a20696d706c656d656e746174696f6e206d75737420626520636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ca573d6000f35b3d6000fd5b3480156100db57600080fd5b5061010c6100ea36600461029c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561011a57600080fd5b50610123610275565b6040516001600160a01b03909116815260200160405180910390f35b60008060006101566000546001600160a01b031690565b6040516001600160e01b03197f00000000000000000000000000000000000000000000000000000000000000001660208201526001600160a01b03919091169060240160408051601f19818403018152908290526101b3916102c0565b600060405180830381855afa9150503d80600081146101ee576040519150601f19603f3d011682016040523d82523d6000602084013e6101f3565b606091505b50915091508161025a5760405162461bcd60e51b815260206004820152602c60248201527f4d616e6167656450726f78793a206661696c656420746f20666574636820696d60448201526b383632b6b2b73a30ba34b7b760a11b60648201526084016100a2565b8080602001905181019061026e91906102fb565b9250505090565b600061027f61013f565b905090565b6001600160a01b038116811461029957600080fd5b50565b6000602082840312156102ae57600080fd5b81356102b981610284565b9392505050565b6000825160005b818110156102e157602081860181015185830152016102c7565b818111156102f0576000828501525b509190910192915050565b60006020828403121561030d57600080fd5b81516102b98161028456fea264697066735822122092fc1940ed520861f66b8f56900a8d757b9697ab895de90184b9a7ab723cfec364736f6c634300080a0033';

type ManagedProxyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagedProxyMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ManagedProxyMock__factory extends ContractFactory {
  constructor(...args: ManagedProxyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ManagedProxyMock> {
    return super.deploy(
      manager,
      managerSelector,
      overrides || {},
    ) as Promise<ManagedProxyMock>;
  }
  override getDeployTransaction(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      manager,
      managerSelector,
      overrides || {},
    );
  }
  override attach(address: string): ManagedProxyMock {
    return super.attach(address) as ManagedProxyMock;
  }
  override connect(signer: Signer): ManagedProxyMock__factory {
    return super.connect(signer) as ManagedProxyMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagedProxyMockInterface {
    return new utils.Interface(_abi) as ManagedProxyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ManagedProxyMock {
    return new Contract(address, _abi, signerOrProvider) as ManagedProxyMock;
  }
}
