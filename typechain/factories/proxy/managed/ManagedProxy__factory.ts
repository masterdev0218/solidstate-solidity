/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ManagedProxy,
  ManagedProxyInterface,
} from '../../../proxy/managed/ManagedProxy';
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

const _abi = [
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
];

export class ManagedProxy__factory {
  static readonly abi = _abi;
  static createInterface(): ManagedProxyInterface {
    return new utils.Interface(_abi) as ManagedProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ManagedProxy {
    return new Contract(address, _abi, signerOrProvider) as ManagedProxy;
  }
}
