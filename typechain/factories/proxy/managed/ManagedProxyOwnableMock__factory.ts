/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ManagedProxyOwnableMock,
  ManagedProxyOwnableMockInterface,
} from '../../../proxy/managed/ManagedProxyOwnableMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'manager',
        type: 'address',
      },
      {
        internalType: 'bytes4',
        name: 'managerSelector',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [],
    name: '__getImplementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '__getManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'setOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161050438038061050483398101604081905261002f916100b9565b6001600160e01b031981166080526100468261004d565b505061010c565b6100758161006361007860201b6102d51760201c565b61009c60201b6102f91790919060201c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b81546001600160a01b0319166001600160a01b0391909116179055565b600080604083850312156100cc57600080fd5b82516001600160a01b03811681146100e357600080fd5b60208401519092506001600160e01b03198116811461010157600080fd5b809150509250929050565b6080516103dd610127600039600061017d01526103dd6000f3fe6080604052600436106100435760003560e01c806313af4035146100e55780632f8bfdd114610107578063893d20e814610138578063d433c57e1461014d5761004a565b3661004a57005b6000610054610162565b90506001600160a01b0381163b6100c15760405162461bcd60e51b815260206004820152602660248201527f50726f78793a20696d706c656d656e746174696f6e206d75737420626520636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100e0573d6000f35b3d6000fd5b3480156100f157600080fd5b5061010561010036600461032b565b61028e565b005b34801561011357600080fd5b5061011c6102a3565b6040516001600160a01b03909116815260200160405180910390f35b34801561014457600080fd5b5061011c6102b2565b34801561015957600080fd5b5061011c6102cb565b600080600061016f6102b2565b6040516001600160e01b03197f00000000000000000000000000000000000000000000000000000000000000001660208201526001600160a01b03919091169060240160408051601f19818403018152908290526101cc9161034f565b600060405180830381855afa9150503d8060008114610207576040519150601f19603f3d011682016040523d82523d6000602084013e61020c565b606091505b5091509150816102735760405162461bcd60e51b815260206004820152602c60248201527f4d616e6167656450726f78793a206661696c656420746f20666574636820696d60448201526b383632b6b2b73a30ba34b7b760a11b60648201526084016100b8565b80806020019051810190610287919061038a565b9250505090565b6102a08161029a6102d5565b906102f9565b50565b60006102ad6102b2565b905090565b60006102bc6102d5565b546001600160a01b0316919050565b60006102ad610162565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b03811681146102a057600080fd5b60006020828403121561033d57600080fd5b813561034881610316565b9392505050565b6000825160005b818110156103705760208186018101518583015201610356565b8181111561037f576000828501525b509190910192915050565b60006020828403121561039c57600080fd5b81516103488161031656fea2646970667358221220dad3aa09c5d5a83f59b67f8d717812eb5b716b90dcc4fd731d38f02eb431a49164736f6c634300080a0033';

type ManagedProxyOwnableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagedProxyOwnableMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ManagedProxyOwnableMock__factory extends ContractFactory {
  constructor(...args: ManagedProxyOwnableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ManagedProxyOwnableMock> {
    return super.deploy(
      manager,
      managerSelector,
      overrides || {},
    ) as Promise<ManagedProxyOwnableMock>;
  }
  override getDeployTransaction(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      manager,
      managerSelector,
      overrides || {},
    );
  }
  override attach(address: string): ManagedProxyOwnableMock {
    return super.attach(address) as ManagedProxyOwnableMock;
  }
  override connect(signer: Signer): ManagedProxyOwnableMock__factory {
    return super.connect(signer) as ManagedProxyOwnableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagedProxyOwnableMockInterface {
    return new utils.Interface(_abi) as ManagedProxyOwnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ManagedProxyOwnableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as ManagedProxyOwnableMock;
  }
}
