/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UpgradeableProxyOwnableMock,
  UpgradeableProxyOwnableMockInterface,
} from '../../../proxy/upgradeable/UpgradeableProxyOwnableMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'setImplementation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516103b73803806103b783398101604081905261002f9161011d565b61003882610071565b8061004b61009c60201b61017b1760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506101509050565b610099816100876100c060201b61019f1760201c565b6100e460201b6101c31790919060201c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7ff7f483ff1916e63c14790f9c8bd1f715e1ffa6a089843b606bbc96607229b80490565b81546001600160a01b0319166001600160a01b0391909116179055565b80516001600160a01b038116811461011857600080fd5b919050565b6000806040838503121561013057600080fd5b61013983610101565b915061014760208401610101565b90509250929050565b6102588061015f6000396000f3fe6080604052600436106100225760003560e01c8063d784d426146100ed57610029565b3661002957005b600061005c7ff7f483ff1916e63c14790f9c8bd1f715e1ffa6a089843b606bbc96607229b804546001600160a01b031690565b90506001600160a01b0381163b6100c95760405162461bcd60e51b815260206004820152602660248201527f50726f78793a20696d706c656d656e746174696f6e206d75737420626520636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100e8573d6000f35b3d6000fd5b3480156100f957600080fd5b5061010d6101083660046101f2565b61010f565b005b61011761017b565b546001600160a01b0316331461016f5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100c0565b610178816101e0565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7ff7f483ff1916e63c14790f9c8bd1f715e1ffa6a089843b606bbc96607229b80490565b81546001600160a01b0319166001600160a01b0391909116179055565b610178816101ec61019f565b906101c3565b60006020828403121561020457600080fd5b81356001600160a01b038116811461021b57600080fd5b939250505056fea26469706673582212207262601cd99fbccc3c332034cf394022117eaaf96af2fa582c6e45c07903375664736f6c634300080a0033';

type UpgradeableProxyOwnableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeableProxyOwnableMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeableProxyOwnableMock__factory extends ContractFactory {
  constructor(...args: UpgradeableProxyOwnableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implementation: string,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<UpgradeableProxyOwnableMock> {
    return super.deploy(
      implementation,
      owner,
      overrides || {},
    ) as Promise<UpgradeableProxyOwnableMock>;
  }
  override getDeployTransaction(
    implementation: string,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(implementation, owner, overrides || {});
  }
  override attach(address: string): UpgradeableProxyOwnableMock {
    return super.attach(address) as UpgradeableProxyOwnableMock;
  }
  override connect(signer: Signer): UpgradeableProxyOwnableMock__factory {
    return super.connect(signer) as UpgradeableProxyOwnableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeableProxyOwnableMockInterface {
    return new utils.Interface(_abi) as UpgradeableProxyOwnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): UpgradeableProxyOwnableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as UpgradeableProxyOwnableMock;
  }
}
