/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DiamondBase,
  DiamondBaseInterface,
} from '../../../proxy/diamond/DiamondBase';
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

const _abi = [
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
];

export class DiamondBase__factory {
  static readonly abi = _abi;
  static createInterface(): DiamondBaseInterface {
    return new utils.Interface(_abi) as DiamondBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DiamondBase {
    return new Contract(address, _abi, signerOrProvider) as DiamondBase;
  }
}
