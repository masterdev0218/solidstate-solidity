/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MinimalProxyFactoryMock,
  MinimalProxyFactoryMockInterface,
} from '../../factory/MinimalProxyFactoryMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
    ],
    name: '__calculateMinimalProxyDeploymentAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
    ],
    name: '__deployMinimalProxy',
    outputs: [
      {
        internalType: 'address',
        name: 'minimalProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: '__deployMinimalProxy',
    outputs: [
      {
        internalType: 'address',
        name: 'minimalProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: '__generateMinimalProxyInitCode',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610425806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633ddc4e811461005157806366b778a21461008157806385ef401b14610094578063f354c3cf146100b4575b600080fd5b61006461005f3660046102fb565b6100c7565b6040516001600160a01b0390911681526020015b60405180910390f35b61006461008f3660046102fb565b6100dc565b6100a76100a2366004610325565b6100e8565b6040516100789190610370565b6100646100c2366004610325565b6100f3565b60006100d383836100fe565b90505b92915050565b60006100d38383610112565b60606100d682610178565b60006100d6826101f8565b60006100d361010c84610178565b8361020b565b60006100d361012084610178565b8051602091820120604080516001600160f81b0319818501526bffffffffffffffffffffffff193060601b16602182015260358101879052605580820193909352815180820390930183526075019052805191012090565b6060604051806040016040528060148152602001733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815250826040518060400160405280600f81526020016e5af43d82803e903d91602b57fd5bf360881b8152506040516020016101e2939291906103a3565b6040516020818303038152906040529050919050565b60006100d661020683610178565b610278565b60008260200183518381836000f5925050506001600160a01b0381166100d65760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a206661696c6564206465706c6f796d656e7400000000000060448201526064015b60405180910390fd5b600081602001825180826000f0925050506001600160a01b0381166102df5760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a206661696c6564206465706c6f796d656e74000000000000604482015260640161026f565b919050565b80356001600160a01b03811681146102df57600080fd5b6000806040838503121561030e57600080fd5b610317836102e4565b946020939093013593505050565b60006020828403121561033757600080fd5b6100d3826102e4565b60005b8381101561035b578181015183820152602001610343565b8381111561036a576000848401525b50505050565b602081526000825180602084015261038f816040850160208701610340565b601f01601f19169190910160400192915050565b600084516103b5818460208901610340565b606085901b6bffffffffffffffffffffffff191690830190815283516103e2816014840160208801610340565b016014019594505050505056fea264697066735822122095fba3a67048e04be8258046be9c6eff7e149586fdc99f2bd9d3ef4d6d7b2c1d64736f6c634300080a0033';

type MinimalProxyFactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalProxyFactoryMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalProxyFactoryMock__factory extends ContractFactory {
  constructor(...args: MinimalProxyFactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MinimalProxyFactoryMock> {
    return super.deploy(overrides || {}) as Promise<MinimalProxyFactoryMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MinimalProxyFactoryMock {
    return super.attach(address) as MinimalProxyFactoryMock;
  }
  override connect(signer: Signer): MinimalProxyFactoryMock__factory {
    return super.connect(signer) as MinimalProxyFactoryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalProxyFactoryMockInterface {
    return new utils.Interface(_abi) as MinimalProxyFactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MinimalProxyFactoryMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as MinimalProxyFactoryMock;
  }
}
