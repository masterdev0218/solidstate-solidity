/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155EnumerableMock,
  ERC1155EnumerableMockInterface,
} from '../../../../token/ERC1155/enumerable/ERC1155EnumerableMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'accountsByToken',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'tokensByAccount',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'totalHolders',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200004a6301ffc9a760e01b6001620000356200007360201b620006a11760201c565b6200009760201b620006c5179092919060201c565b6200006d636cdb3d1360e11b6001620000356200007360201b620006a11760201c565b62000124565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b03198083161415620000f65760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b611eda80620001346000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c806372b0589c1161008c578063bd85b03911610066578063bd85b039146101bd578063c12e5c68146101d0578063e985e9c5146101e3578063f242432a146101f657600080fd5b806372b0589c1461018457806385bff2e714610197578063a22cb465146101aa57600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806313ba55df1461011c5780632eb2c2d61461012f5780634e1273f4146101445780636dcfd84114610164575b600080fd5b6100e66100e1366004611600565b610209565b6040519081526020015b60405180910390f35b61010c610107366004611643565b61021e565b60405190151581526020016100f0565b6100e661012a366004611667565b61024d565b61014261013d3660046117cc565b610258565b005b610157610152366004611876565b6102ae565b6040516100f0919061197c565b610177610172366004611667565b6104a4565b6040516100f0919061198f565b6101426101923660046119dc565b6104af565b6101576101a5366004611a0f565b6104cf565b6101426101b8366004611a2a565b6104da565b6100e66101cb366004611667565b6105d0565b6101426101de3660046119dc565b610603565b61010c6101f1366004611a66565b61060e565b610142610204366004611a99565b61065b565b6000610215838361074d565b90505b92915050565b60006102188261022c6106a1565b906001600160e01b0319166000908152602091909152604090205460ff1690565b6000610218826107ee565b6001600160a01b0385163314806102745750610274853361060e565b6102995760405162461bcd60e51b815260040161029090611afe565b60405180910390fd5b6102a7338686868686610824565b5050505050565b606081518351146103135760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610290565b8251600080516020611e858339815191529060009067ffffffffffffffff81111561034057610340611680565b604051908082528060200260200182016040528015610369578160200160208202803683370190505b50905060005b855181101561049b5760006001600160a01b031686828151811061039557610395611b47565b60200260200101516001600160a01b0316141561040e5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527020746865207a65726f206164647265737360781b6064820152608401610290565b82600086838151811061042357610423611b47565b60200260200101518152602001908152602001600020600087838151811061044d5761044d611b47565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061048857610488611b47565b602090810291909101015260010161036f565b50949350505050565b606061021882610848565b6104ca8383836040518060200160405280600081525061091c565b505050565b606061021882610a2f565b336001600160a01b03831614156105455760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610290565b3360008181527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60008181527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea6020526040812054610218565b6104ca838383610af8565b6001600160a01b0391821660009081527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c6020908152604080832093909416825291909152205460ff1690565b6001600160a01b0385163314806106775750610677853361060e565b6106935760405162461bcd60e51b815260040161029090611afe565b6102a7338686868686610c6f565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b0319808316141561071f5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610290565b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b60006001600160a01b0383166107b95760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608401610290565b600080516020611e858339815191526000928352602090815260408084206001600160a01b0395909516845293905250205490565b60008181527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb6020526040812061021890610c8b565b610832868686868686610c95565b610840868686868686610e7c565b505050505050565b60008181527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb6020526040812060609161088182610c8b565b67ffffffffffffffff81111561089957610899611680565b6040519080825280602002602001820160405280156108c2578160200160208202803683370190505b50905060005b6108d183610c8b565b811015610914576108e28382610fe1565b8282815181106108f4576108f4611b47565b6001600160a01b03909216602092830291909101909101526001016108c8565b509392505050565b6001600160a01b03841661097c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610290565b61099b3360008661098c87610fed565b61099587610fed565b86611038565b6000838152600080516020611e85833981519152602090815260408083206001600160a01b0388168452909152812080548492906109da908490611b73565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a450505050565b6001600160a01b03811660009081527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec60205260408120606091610a7282610c8b565b67ffffffffffffffff811115610a8a57610a8a611680565b604051908082528060200260200182016040528015610ab3578160200160208202803683370190505b50905060005b610ac283610c8b565b81101561091457610ad38382610fe1565b828281518110610ae557610ae5611b47565b6020908102919091010152600101610ab9565b6001600160a01b038316610b5a5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610290565b610b8833846000610b6a86610fed565b610b7386610fed565b60405180602001604052806000815250611038565b6000828152600080516020611e85833981519152602090815260408083206001600160a01b03871684529182905290912054821115610c175760405162461bcd60e51b815260206004820152602560248201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015264616e63657360d81b6064820152608401610290565b6001600160a01b03841660008181526020838152604080832080548790039055805187815291820186905291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610a21565b610c7d868686868686611046565b61084086868686868661115a565b6000610218825490565b6001600160a01b038416610cbb5760405162461bcd60e51b815260040161029090611b8b565b8151835114610d1d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610290565b610d2b868686868686611038565b600080516020611e8583398151915260005b8451811015610e1b576000858281518110610d5a57610d5a611b47565b602002602001015190506000858381518110610d7857610d78611b47565b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015610dc85760405162461bcd60e51b815260040161029090611bd0565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290610e0e908490611b73565b90915550610d3d92505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e6b929190611c1b565b60405180910390a450505050505050565b6001600160a01b0384163b156108405760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ec09089908990889088908890600401611c96565b6020604051808303816000875af1925050508015610efb575060408051601f3d908101601f19168201909252610ef891810190611cf4565b60015b610fa857610f07611d11565b806308c379a01415610f415750610f1c611d2d565b80610f275750610f43565b8060405162461bcd60e51b81526004016102909190611db7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610290565b6001600160e01b0319811663bc197c8160e01b14610fd85760405162461bcd60e51b815260040161029090611dca565b50505050505050565b60006102158383611215565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061102757611027611b47565b602090810291909101015292915050565b61084086868686868661129b565b6001600160a01b03841661106c5760405162461bcd60e51b815260040161029090611b8b565b61107b86868661098c87610fed565b6000838152600080516020611e85833981519152602081815260408084206001600160a01b038a16855290915290912054838110156110cc5760405162461bcd60e51b815260040161029090611bd0565b6000858152602083815260408083206001600160a01b038b8116855292528083209387900390935587168152908120805485929061110b908490611b73565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610e6b565b6001600160a01b0384163b156108405760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061119e9089908990889088908890600401611e12565b6020604051808303816000875af19250505080156111d9575060408051601f3d908101601f191682019092526111d691810190611cf4565b60015b6111e557610f07611d11565b6001600160e01b0319811663f23a6e6160e01b14610fd85760405162461bcd60e51b815260040161029090611dca565b815460009082106112735760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610290565b82600001828154811061128857611288611b47565b9060005260206000200154905092915050565b836001600160a01b0316856001600160a01b031614610840576001600160a01b0385811660009081527fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ec6020526040808220928716825281207fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424ea927fb31c2c74f86ca3ce94d901f5f5bbe66f7161eec2f7b5aa0b75a86371436424eb929091905b875181101561147957600087828151811061135957611359611b47565b60200260200101519050600081111561147057600089838151811061138057611380611b47565b6020026020010151905060006001600160a01b03168c6001600160a01b031614156113ce57600081815260208890526040812080548492906113c3908490611b73565b909155506114049050565b816113d98d8361074d565b14156114045760008181526020879052604090206113f7908d611486565b50611402858261149b565b505b6001600160a01b038b1661143b5760008181526020889052604081208054849290611430908490611e57565b9091555061146e9050565b6114458b8261074d565b61146e576000818152602087905260409020611461908c6114a7565b5061146c84826114bc565b505b505b5060010161133c565b5050505050505050505050565b6000610215836001600160a01b0384166114c8565b600061021583836114c8565b6000610215836001600160a01b038416611595565b60006102158383611595565b6000818152600183016020526040812054801561158b578354600090859060001981019081106114fa576114fa611b47565b906000526020600020015490508085600001600184038154811061152057611520611b47565b600091825260208083209091019290925591825260018601905260409020819055835484908061155257611552611e6e565b60019003818190600052602060002001600090559055836001016000848152602001908152602001600020600090556001915050610218565b6000915050610218565b60008181526001830160205260408120546115dc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610218565b506000610218565b80356001600160a01b03811681146115fb57600080fd5b919050565b6000806040838503121561161357600080fd5b61161c836115e4565b946020939093013593505050565b6001600160e01b03198116811461164057600080fd5b50565b60006020828403121561165557600080fd5b81356116608161162a565b9392505050565b60006020828403121561167957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116bc576116bc611680565b6040525050565b600067ffffffffffffffff8211156116dd576116dd611680565b5060051b60200190565b600082601f8301126116f857600080fd5b81356020611705826116c3565b6040516117128282611696565b83815260059390931b850182019282810191508684111561173257600080fd5b8286015b8481101561174d5780358352918301918301611736565b509695505050505050565b600082601f83011261176957600080fd5b813567ffffffffffffffff81111561178357611783611680565b60405161179a601f8301601f191660200182611696565b8181528460208386010111156117af57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156117e457600080fd5b6117ed866115e4565b94506117fb602087016115e4565b9350604086013567ffffffffffffffff8082111561181857600080fd5b61182489838a016116e7565b9450606088013591508082111561183a57600080fd5b61184689838a016116e7565b9350608088013591508082111561185c57600080fd5b5061186988828901611758565b9150509295509295909350565b6000806040838503121561188957600080fd5b823567ffffffffffffffff808211156118a157600080fd5b818501915085601f8301126118b557600080fd5b813560206118c2826116c3565b6040516118cf8282611696565b83815260059390931b85018201928281019150898411156118ef57600080fd5b948201945b8386101561191457611905866115e4565b825294820194908201906118f4565b9650508601359250508082111561192a57600080fd5b50611937858286016116e7565b9150509250929050565b600081518084526020808501945080840160005b8381101561197157815187529582019590820190600101611955565b509495945050505050565b6020815260006102156020830184611941565b6020808252825182820181905260009190848201906040850190845b818110156119d05783516001600160a01b0316835292840192918401916001016119ab565b50909695505050505050565b6000806000606084860312156119f157600080fd5b6119fa846115e4565b95602085013595506040909401359392505050565b600060208284031215611a2157600080fd5b610215826115e4565b60008060408385031215611a3d57600080fd5b611a46836115e4565b915060208301358015158114611a5b57600080fd5b809150509250929050565b60008060408385031215611a7957600080fd5b611a82836115e4565b9150611a90602084016115e4565b90509250929050565b600080600080600060a08688031215611ab157600080fd5b611aba866115e4565b9450611ac8602087016115e4565b93506040860135925060608601359150608086013567ffffffffffffffff811115611af257600080fd5b61186988828901611758565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611b8657611b86611b5d565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602b908201527f455243313135353a20696e73756666696369656e742062616c616e636573206660408201526a37b9103a3930b739b332b960a91b606082015260800190565b604081526000611c2e6040830185611941565b8281036020840152611c408185611941565b95945050505050565b6000815180845260005b81811015611c6f57602081850181015186830182015201611c53565b81811115611c81576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611cc290830186611941565b8281036060840152611cd48186611941565b90508281036080840152611ce88185611c49565b98975050505050505050565b600060208284031215611d0657600080fd5b81516116608161162a565b600060033d1115611d2a5760046000803e5060005160e01c5b90565b600060443d1015611d3b5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611d6b57505050505090565b8285019150815181811115611d835750505050505090565b843d8701016020828501011115611d9d5750505050505090565b611dac60208286010187611696565b509095945050505050565b6020815260006102156020830184611c49565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611e4c90830184611c49565b979650505050505050565b600082821015611e6957611e69611b5d565b500390565b634e487b7160e01b600052603160045260246000fdfe1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68ba26469706673582212208708d2b9fc6e79e36e69c5f6c8816d5234295209d2d3de9db08229e197f5913264736f6c634300080a0033';

type ERC1155EnumerableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155EnumerableMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155EnumerableMock__factory extends ContractFactory {
  constructor(...args: ERC1155EnumerableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC1155EnumerableMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155EnumerableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155EnumerableMock {
    return super.attach(address) as ERC1155EnumerableMock;
  }
  override connect(signer: Signer): ERC1155EnumerableMock__factory {
    return super.connect(signer) as ERC1155EnumerableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155EnumerableMockInterface {
    return new utils.Interface(_abi) as ERC1155EnumerableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1155EnumerableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as ERC1155EnumerableMock;
  }
}
