/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155MetadataMock,
  ERC1155MetadataMockInterface,
} from '../../../../token/ERC1155/metadata/ERC1155MetadataMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516107e63803806107e683398101604081905261002f91610133565b600061004361006060201b6102591760201c565b82519091506100589082906020850190610084565b50505061023d565b7f4281b61aefbe70b3d3f684b428efca5f33077bc240e76f2808f9177c307617f490565b82805461009090610202565b90600052602060002090601f0160209004810192826100b257600085556100f8565b82601f106100cb57805160ff19168380011785556100f8565b828001600101855582156100f8579182015b828111156100f85782518255916020019190600101906100dd565b50610104929150610108565b5090565b5b808211156101045760008155600101610109565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561014657600080fd5b82516001600160401b038082111561015d57600080fd5b818501915085601f83011261017157600080fd5b8151818111156101835761018361011d565b604051601f8201601f19908116603f011681019083821181831017156101ab576101ab61011d565b8160405282815288868487010111156101c357600080fd5b600093505b828410156101e557848401860151818501870152928501926101c8565b828411156101f65760008684830101525b98975050505050505050565b600181811c9082168061021657607f821691505b6020821081141561023757634e487b7160e01b600052602260045260246000fd5b50919050565b61059a8061024c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780630e89341c1461009c575b600080fd5b610087610049366004610383565b6001600160e01b03191660009081527f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e705602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100af6100aa3660046103b4565b6100bc565b60405161009391906103fd565b606060006100c8610259565b60008481526001820160205260408120805492935090916100e890610430565b80601f016020809104026020016040519081016040528092919081815260200182805461011490610430565b80156101615780601f1061013657610100808354040283529160200191610161565b820191906000526020600020905b81548152906001019060200180831161014457829003601f168201915b50505050509050600082600001805461017990610430565b80601f01602080910402602001604051908101604052809291908181526020018280546101a590610430565b80156101f25780601f106101c7576101008083540402835291602001916101f2565b820191906000526020600020905b8154815290600101906020018083116101d557829003601f168201915b5050505050905080516000141561020b57509392505050565b81511561023e57808260405160200161022592919061046b565b6040516020818303038152906040529350505050919050565b806102488661027d565b60405160200161022592919061046b565b7f4281b61aefbe70b3d3f684b428efca5f33077bc240e76f2808f9177c307617f490565b6060816102a15750506040805180820190915260018152600360fc1b602082015290565b8160005b81156102cb57806102b5816104b0565b91506102c49050600a836104e1565b91506102a5565b60008167ffffffffffffffff8111156102e6576102e66104f5565b6040519080825280601f01601f191660200182016040528015610310576020820181803683370190505b5090505b841561037b5761032560018361050b565b9150610332600a86610522565b61033d906030610536565b60f81b8183815181106103525761035261054e565b60200101906001600160f81b031916908160001a905350610374600a866104e1565b9450610314565b949350505050565b60006020828403121561039557600080fd5b81356001600160e01b0319811681146103ad57600080fd5b9392505050565b6000602082840312156103c657600080fd5b5035919050565b60005b838110156103e85781810151838201526020016103d0565b838111156103f7576000848401525b50505050565b602081526000825180602084015261041c8160408501602087016103cd565b601f01601f19169190910160400192915050565b600181811c9082168061044457607f821691505b6020821081141561046557634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161047d8184602088016103cd565b8351908301906104918183602088016103cd565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156104c4576104c461049a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826104f0576104f06104cb565b500490565b634e487b7160e01b600052604160045260246000fd5b60008282101561051d5761051d61049a565b500390565b600082610531576105316104cb565b500690565b600082198211156105495761054961049a565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208f07099b0a051c5f10b3abccc5f0e44a4a5ca640e237e7e6452c716f32f2af5764736f6c634300080a0033';

type ERC1155MetadataMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MetadataMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155MetadataMock__factory extends ContractFactory {
  constructor(...args: ERC1155MetadataMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC1155MetadataMock> {
    return super.deploy(
      baseURI,
      overrides || {},
    ) as Promise<ERC1155MetadataMock>;
  }
  override getDeployTransaction(
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(baseURI, overrides || {});
  }
  override attach(address: string): ERC1155MetadataMock {
    return super.attach(address) as ERC1155MetadataMock;
  }
  override connect(signer: Signer): ERC1155MetadataMock__factory {
    return super.connect(signer) as ERC1155MetadataMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MetadataMockInterface {
    return new utils.Interface(_abi) as ERC1155MetadataMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1155MetadataMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155MetadataMock;
  }
}
