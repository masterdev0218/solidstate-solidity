/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155BaseMock,
  ERC1155BaseMockInterface,
} from '../../../../token/ERC1155/base/ERC1155BaseMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: '__burnBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: '__mintBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__safeMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: '__safeMintBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: '__safeTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: '__safeTransferBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: '__transfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: '__transferBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200004a6301ffc9a760e01b6001620000356200007360201b620007681760201c565b6200009760201b6200078c179092919060201c565b6200006d636cdb3d1360e11b6001620000356200007360201b620007681760201c565b62000124565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b03198083161415620000f65760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b611e0180620001346000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c806372b0589c116100a2578063c0443c3111610071578063c0443c3114610225578063c12e5c6814610238578063c4f793e31461024b578063e985e9c51461025e578063f242432a1461027157600080fd5b806372b0589c146101d957806390080b14146101ec578063a22cb465146101ff578063aae8e7871461021257600080fd5b80632380a908116100de5780632380a908146101805780632eb2c2d6146101935780634e1273f4146101a657806368a3bd7c146101c657600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630ee5d3dd1461015857806310b715031461016d575b600080fd5b61012261011d366004611377565b610284565b6040519081526020015b60405180910390f35b6101486101433660046113ba565b610297565b604051901515815260200161012c565b61016b6101663660046114af565b6102cc565b005b61016b61017b366004611597565b6102dc565b61016b61018e366004611650565b6102f2565b61016b6101a13660046116c4565b610300565b6101b96101b436600461176e565b610356565b60405161012c9190611874565b61016b6101d4366004611650565b61054c565b61016b6101e7366004611887565b61055a565b61016b6101fa366004611887565b610575565b61016b61020d3660046118ba565b610590565b61016b6102203660046114af565b610686565b61016b6102333660046114af565b6106a1565b61016b610246366004611887565b6106bc565b61016b610259366004611597565b6106c7565b61014861026c3660046118f6565b6106d5565b61016b61027f366004611929565b610722565b60006102908383610814565b9392505050565b60006102c6826102a5610768565b906001600160e01b0319166000908152602091909152604090205460ff1690565b92915050565b6102d78383836108b5565b505050565b6102ea868686868686610a89565b505050505050565b6102ea868686868686610aa5565b6001600160a01b03851633148061031c575061031c85336106d5565b6103415760405162461bcd60e51b81526004016103389061198e565b60405180910390fd5b61034f338686868686610a89565b5050505050565b606081518351146103bb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610338565b8251600080516020611dac8339815191529060009067ffffffffffffffff8111156103e8576103e86113d7565b604051908082528060200260200182016040528015610411578160200160208202803683370190505b50905060005b85518110156105435760006001600160a01b031686828151811061043d5761043d6119d7565b60200260200101516001600160a01b031614156104b65760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527020746865207a65726f206164647265737360781b6064820152608401610338565b8260008683815181106104cb576104cb6119d7565b6020026020010151815260200190815260200160002060008783815181106104f5576104f56119d7565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610530576105306119d7565b6020908102919091010152600101610417565b50949350505050565b6102ea868686868686610ac1565b6102d783838360405180602001604052806000815250610beb565b6102d783838360405180602001604052806000815250610cab565b336001600160a01b03831614156105fb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610338565b3360008181527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6102d783838360405180602001604052806000815250610ccc565b6102d783838360405180602001604052806000815250610ce7565b6102d7838383610e2d565b6102ea868686868686610f69565b6001600160a01b0391821660009081527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c6020908152604080832093909416825291909152205460ff1690565b6001600160a01b03851633148061073e575061073e85336106d5565b61075a5760405162461bcd60e51b81526004016103389061198e565b61034f338686868686610aa5565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b031980831614156107e65760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610338565b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b60006001600160a01b0383166108805760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608401610338565b600080516020611dac8339815191526000928352602090815260408084206001600160a01b0395909516845293905250205490565b6001600160a01b0383166108db5760405162461bcd60e51b8152600401610338906119ed565b80518251146108fc5760405162461bcd60e51b815260040161033890611a30565b6040805160208101909152600090819052600080516020611dac833981519152905b8351811015610a2a57600084828151811061093b5761093b6119d7565b60200260200101519050838281518110610957576109576119d7565b602090810291909101810151600083815285835260408082206001600160a01b038b168352909352919091205410156109de5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610338565b8382815181106109f0576109f06119d7565b602090810291909101810151600092835284825260408084206001600160a01b038a1685529092529120805491909103905560010161091e565b5060006001600160a01b0316846001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a7b929190611a78565b60405180910390a450505050565b610a97868686868686610f69565b6102ea8686868686866110f0565b610ab3868686868686610ac1565b6102ea868686868686611255565b6001600160a01b038416610ae75760405162461bcd60e51b815260040161033890611aa6565b610aff868686610af687611310565b61034f87611310565b6000838152600080516020611dac833981519152602081815260408084206001600160a01b038a1685529091529091205483811015610b505760405162461bcd60e51b815260040161033890611aeb565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290610b8f908490611b36565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a450505050505050565b6001600160a01b038416610c115760405162461bcd60e51b815260040161033890611b5c565b610c2133600086610af687611310565b6000838152600080516020611dac833981519152602090815260408083206001600160a01b038816845290915281208054849290610c60908490611b36565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610a7b565b610cb784848484610beb565b610cc633600086868686611255565b50505050565b610cd884848484610ce7565b610cc6336000868686866110f0565b6001600160a01b038416610d0d5760405162461bcd60e51b815260040161033890611b5c565b8151835114610d2e5760405162461bcd60e51b815260040161033890611a30565b600080516020611dac83398151915260005b8451811015610dcd57838181518110610d5b57610d5b6119d7565b6020026020010151826000878481518110610d7857610d786119d7565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610dc09190611b36565b9091555050600101610d40565b50846001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e1e929190611a78565b60405180910390a45050505050565b6001600160a01b038316610e535760405162461bcd60e51b8152600401610338906119ed565b610e8233846000610e6386611310565b610e6c86611310565b5050604080516020810190915260009052505050565b6000828152600080516020611dac833981519152602090815260408083206001600160a01b03871684529182905290912054821115610f115760405162461bcd60e51b815260206004820152602560248201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015264616e63657360d81b6064820152608401610338565b6001600160a01b03841660008181526020838152604080832080548790039055805187815291820186905291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610a7b565b6001600160a01b038416610f8f5760405162461bcd60e51b815260040161033890611aa6565b8151835114610fb05760405162461bcd60e51b815260040161033890611a30565b600080516020611dac83398151915260005b84518110156110a0576000858281518110610fdf57610fdf6119d7565b602002602001015190506000858381518110610ffd57610ffd6119d7565b602090810291909101810151600084815286835260408082206001600160a01b038e16835290935291909120549091508181101561104d5760405162461bcd60e51b815260040161033890611aeb565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611093908490611b36565b90915550610fc292505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610bda929190611a78565b6001600160a01b0384163b156102ea5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111349089908990889088908890600401611bea565b6020604051808303816000875af192505050801561116f575060408051601f3d908101601f1916820190925261116c91810190611c48565b60015b61121c5761117b611c65565b806308c379a014156111b55750611190611c81565b8061119b57506111b7565b8060405162461bcd60e51b81526004016103389190611d0b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610338565b6001600160e01b0319811663bc197c8160e01b1461124c5760405162461bcd60e51b815260040161033890611d1e565b50505050505050565b6001600160a01b0384163b156102ea5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112999089908990889088908890600401611d66565b6020604051808303816000875af19250505080156112d4575060408051601f3d908101601f191682019092526112d191810190611c48565b60015b6112e05761117b611c65565b6001600160e01b0319811663f23a6e6160e01b1461124c5760405162461bcd60e51b815260040161033890611d1e565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061134a5761134a6119d7565b602090810291909101015292915050565b80356001600160a01b038116811461137257600080fd5b919050565b6000806040838503121561138a57600080fd5b6113938361135b565b946020939093013593505050565b6001600160e01b0319811681146113b757600080fd5b50565b6000602082840312156113cc57600080fd5b8135610290816113a1565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611413576114136113d7565b6040525050565b600067ffffffffffffffff821115611434576114346113d7565b5060051b60200190565b600082601f83011261144f57600080fd5b8135602061145c8261141a565b60405161146982826113ed565b83815260059390931b850182019282810191508684111561148957600080fd5b8286015b848110156114a4578035835291830191830161148d565b509695505050505050565b6000806000606084860312156114c457600080fd5b6114cd8461135b565b9250602084013567ffffffffffffffff808211156114ea57600080fd5b6114f68783880161143e565b9350604086013591508082111561150c57600080fd5b506115198682870161143e565b9150509250925092565b600082601f83011261153457600080fd5b813567ffffffffffffffff81111561154e5761154e6113d7565b604051611565601f8301601f1916602001826113ed565b81815284602083860101111561157a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156115b057600080fd5b6115b98761135b565b95506115c76020880161135b565b94506115d56040880161135b565b9350606087013567ffffffffffffffff808211156115f257600080fd5b6115fe8a838b0161143e565b9450608089013591508082111561161457600080fd5b6116208a838b0161143e565b935060a089013591508082111561163657600080fd5b5061164389828a01611523565b9150509295509295509295565b60008060008060008060c0878903121561166957600080fd5b6116728761135b565b95506116806020880161135b565b945061168e6040880161135b565b9350606087013592506080870135915060a087013567ffffffffffffffff8111156116b857600080fd5b61164389828a01611523565b600080600080600060a086880312156116dc57600080fd5b6116e58661135b565b94506116f36020870161135b565b9350604086013567ffffffffffffffff8082111561171057600080fd5b61171c89838a0161143e565b9450606088013591508082111561173257600080fd5b61173e89838a0161143e565b9350608088013591508082111561175457600080fd5b5061176188828901611523565b9150509295509295909350565b6000806040838503121561178157600080fd5b823567ffffffffffffffff8082111561179957600080fd5b818501915085601f8301126117ad57600080fd5b813560206117ba8261141a565b6040516117c782826113ed565b83815260059390931b85018201928281019150898411156117e757600080fd5b948201945b8386101561180c576117fd8661135b565b825294820194908201906117ec565b9650508601359250508082111561182257600080fd5b5061182f8582860161143e565b9150509250929050565b600081518084526020808501945080840160005b838110156118695781518752958201959082019060010161184d565b509495945050505050565b6020815260006102906020830184611839565b60008060006060848603121561189c57600080fd5b6118a58461135b565b95602085013595506040909401359392505050565b600080604083850312156118cd57600080fd5b6118d68361135b565b9150602083013580151581146118eb57600080fd5b809150509250929050565b6000806040838503121561190957600080fd5b6119128361135b565b91506119206020840161135b565b90509250929050565b600080600080600060a0868803121561194157600080fd5b61194a8661135b565b94506119586020870161135b565b93506040860135925060608601359150608086013567ffffffffffffffff81111561198257600080fd5b61176188828901611523565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b604081526000611a8b6040830185611839565b8281036020840152611a9d8185611839565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602b908201527f455243313135353a20696e73756666696369656e742062616c616e636573206660408201526a37b9103a3930b739b332b960a91b606082015260800190565b60008219821115611b5757634e487b7160e01b600052601160045260246000fd5b500190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b6000815180845260005b81811015611bc357602081850181015186830182015201611ba7565b81811115611bd5576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611c1690830186611839565b8281036060840152611c288186611839565b90508281036080840152611c3c8185611b9d565b98975050505050505050565b600060208284031215611c5a57600080fd5b8151610290816113a1565b600060033d1115611c7e5760046000803e5060005160e01c5b90565b600060443d1015611c8f5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611cbf57505050505090565b8285019150815181811115611cd75750505050505090565b843d8701016020828501011115611cf15750505050505090565b611d00602082860101876113ed565b509095945050505050565b6020815260006102906020830184611b9d565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611da090830184611b9d565b97965050505050505056fe1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68ba2646970667358221220de52543eccde875f7e3d047aa5439bfbd53f95dd231369e668b8a74ee817fd0c64736f6c634300080a0033';

type ERC1155BaseMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BaseMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155BaseMock__factory extends ContractFactory {
  constructor(...args: ERC1155BaseMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC1155BaseMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155BaseMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155BaseMock {
    return super.attach(address) as ERC1155BaseMock;
  }
  override connect(signer: Signer): ERC1155BaseMock__factory {
    return super.connect(signer) as ERC1155BaseMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BaseMockInterface {
    return new utils.Interface(_abi) as ERC1155BaseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1155BaseMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155BaseMock;
  }
}
