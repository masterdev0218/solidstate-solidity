/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC20ExtendedMock,
  ERC20ExtendedMockInterface,
} from '../../../../token/ERC20/extended/ERC20ExtendedMock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610b79806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461011c578063a457c2d714610152578063a9059cbb14610165578063aa82e01714610178578063dd62ed3e1461018b57600080fd5b8063095ea7b3146100a357806318160ddd146100cb57806323b872dd146100e157806339509351146100f45780633dc8ded714610107575b600080fd5b6100b66100b1366004610a0a565b61019e565b60405190151581526020015b60405180910390f35b6100d36101b4565b6040519081526020016100c2565b6100b66100ef366004610a34565b6101e3565b6100b6610102366004610a0a565b61027b565b61011a610115366004610a0a565b61033e565b005b6100d361012a366004610a70565b6001600160a01b03166000908152600080516020610b04833981519152602052604090205490565b6100b6610160366004610a0a565b61034c565b6100b6610173366004610a0a565b610410565b61011a610186366004610a0a565b61041d565b6100d3610199366004610a8b565b610427565b60006101ab33848461043a565b50600192915050565b60006101de7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b65490565b905090565b6000806101f0853361056c565b9050828110156102585760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610265853385840361043a565b6102708585856105a4565b506001949350505050565b336000908152600080516020610b24833981519152602090815260408083206001600160a01b03861684529182905282205483810181111561030a5760405162461bcd60e51b815260206004820152602260248201527f4552433230457874656e6465643a2065786365737369766520616c6c6f77616e604482015261636560f01b606482015260840161024f565b61027033868684018560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561043a565b6103488282610784565b5050565b336000908152600080516020610b24833981519152602090815260408083206001600160a01b038616845291829052822054808411156103dc5760405162461bcd60e51b815260206004820152602560248201527f4552433230457874656e6465643a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b606482015260840161024f565b61027033868684038560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561043a565b60006101ab3384846105a4565b610348828261088d565b6000610433838361056c565b9392505050565b6001600160a01b03831661049c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161024f565b6001600160a01b0382166104fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161024f565b6001600160a01b038381166000818152600080516020610b24833981519152602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b039182166000908152600080516020610b248339815191526020908152604080832093909416825291909152205490565b6001600160a01b0383166106085760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161024f565b6001600160a01b03821661066a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161024f565b6001600160a01b0383166000908152600080516020610b048339815191526020819052604090912054828110156106f25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161024f565b6001600160a01b03808616600090815260208490526040808220868503905591861681529081208054859290610729908490610ad4565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161077591815260200190565b60405180910390a35050505050565b6001600160a01b0382166107da5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161024f565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020610b0483398151915291839160009061081d908490610ad4565b90915550506001600160a01b0383166000908152602082905260408120805484929061084a908490610ad4565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161055f565b6001600160a01b0382166108ed5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161024f565b6001600160a01b0382166000908152600080516020610b048339815191526020819052604090912054828110156109715760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161024f565b6001600160a01b038416600090815260208390526040812084830390556002830180548592906109a2908490610aec565b90915550506040518381526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b80356001600160a01b0381168114610a0557600080fd5b919050565b60008060408385031215610a1d57600080fd5b610a26836109ee565b946020939093013593505050565b600080600060608486031215610a4957600080fd5b610a52846109ee565b9250610a60602085016109ee565b9150604084013590509250925092565b600060208284031215610a8257600080fd5b610433826109ee565b60008060408385031215610a9e57600080fd5b610aa7836109ee565b9150610ab5602084016109ee565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ae757610ae7610abe565b500190565b600082821015610afe57610afe610abe565b50039056fec991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b5a26469706673582212209404d052f70b117b97a05f0dee9c3b5854c1c55b9c0c42950ec7ed4bdfe2496264736f6c634300080a0033';

type ERC20ExtendedMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ExtendedMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20ExtendedMock__factory extends ContractFactory {
  constructor(...args: ERC20ExtendedMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC20ExtendedMock> {
    return super.deploy(overrides || {}) as Promise<ERC20ExtendedMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20ExtendedMock {
    return super.attach(address) as ERC20ExtendedMock;
  }
  override connect(signer: Signer): ERC20ExtendedMock__factory {
    return super.connect(signer) as ERC20ExtendedMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ExtendedMockInterface {
    return new utils.Interface(_abi) as ERC20ExtendedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC20ExtendedMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20ExtendedMock;
  }
}
