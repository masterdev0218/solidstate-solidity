/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC20Mock,
  ERC20MockInterface,
} from '../../../token/ERC20/ERC20Mock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'decimals',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'supply',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620012ea380380620012ea8339810160408190526200003491620003ba565b60006200004b620000b260201b6200049e1760201c565b9050620000678582620000d660201b620004c21790919060201c565b620000818482620000ef60201b620004d91790919060201c565b6200009b83826200010660201b620004ee1790919060201c565b620000a733836200011f565b5050505050620004a9565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304790565b8051620000ea908390602084019062000247565b505050565b8051620000ea906001840190602084019062000247565b600291909101805460ff191660ff909216919091179055565b6001600160a01b0382166200017a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b6000620001916200022360201b620005071760201c565b905081816002016000828254620001a9919062000445565b90915550506001600160a01b03831660009081526020829052604081208054849290620001d890849062000445565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b490565b82805462000255906200046c565b90600052602060002090601f016020900481019282620002795760008555620002c4565b82601f106200029457805160ff1916838001178555620002c4565b82800160010185558215620002c4579182015b82811115620002c4578251825591602001919060010190620002a7565b50620002d2929150620002d6565b5090565b5b80821115620002d25760008155600101620002d7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200031557600080fd5b81516001600160401b0380821115620003325762000332620002ed565b604051601f8301601f19908116603f011681019082821181831017156200035d576200035d620002ed565b816040528381526020925086838588010111156200037a57600080fd5b600091505b838210156200039e57858201830151818301840152908201906200037f565b83821115620003b05760008385830101525b9695505050505050565b60008060008060808587031215620003d157600080fd5b84516001600160401b0380821115620003e957600080fd5b620003f78883890162000303565b955060208701519150808211156200040e57600080fd5b506200041d8782880162000303565b935050604085015160ff811681146200043557600080fd5b6060959095015193969295505050565b600082198211156200046757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200048157607f821691505b60208210811415620004a357634e487b7160e01b600052602260045260246000fd5b50919050565b610e3180620004b96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633dc8ded71161008c578063a457c2d711610066578063a457c2d71461019b578063a9059cbb146101ae578063aa82e017146101c1578063dd62ed3e146101d457600080fd5b80633dc8ded71461016b57806370a082311461018057806395d89b411461019357600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012b578063313ce5671461013e5780633950935114610158575b600080fd5b6100dc6101e7565b6040516100e99190610c56565b60405180910390f35b610105610100366004610cc7565b6101f6565b60405190151581526020016100e9565b61011d61020c565b6040519081526020016100e9565b610105610139366004610cf1565b610216565b6101466102ae565b60405160ff90911681526020016100e9565b610105610166366004610cc7565b6102b8565b61017e610179366004610cc7565b610381565b005b61011d61018e366004610d2d565b61038f565b6100dc6103a0565b6101056101a9366004610cc7565b6103aa565b6101056101bc366004610cc7565b610474565b61017e6101cf366004610cc7565b610481565b61011d6101e2366004610d48565b61048b565b60606101f161052b565b905090565b60006102033384846105c3565b50600192915050565b60006101f16106f8565b600080610223853361070b565b90508281101561028b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61029885338584036105c3565b6102a3858585610745565b506001949350505050565b60006101f1610922565b6000806102c3610507565b336000908152600191909101602090815260408083206001600160a01b0388168452918290529091205490915083810181111561034d5760405162461bcd60e51b815260206004820152602260248201527f4552433230457874656e6465643a2065786365737369766520616c6c6f77616e604482015261636560f01b6064820152608401610282565b6102a333868684018560008a6001600160a01b03166001600160a01b031681526020019081526020016000208190556105c3565b61038b8282610938565b5050565b600061039a82610a1e565b92915050565b60606101f1610a47565b6000806103b5610507565b336000908152600191909101602090815260408083206001600160a01b03881684529182905290912054909150808411156104405760405162461bcd60e51b815260206004820152602560248201527f4552433230457874656e6465643a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b6064820152608401610282565b6102a333868684038560008a6001600160a01b03166001600160a01b031681526020019081526020016000208190556105c3565b6000610203338484610745565b61038b8282610a5f565b6000610497838361070b565b9392505050565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304790565b80516104d49083906020840190610bbd565b505050565b80516104d49060018401906020840190610bbd565b600291909101805460ff191660ff909216919091179055565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b490565b606061053561049e565b805461054090610d7b565b80601f016020809104026020016040519081016040528092919081815260200182805461056c90610d7b565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b6001600160a01b0383166106255760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610282565b6001600160a01b0382166106865760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610282565b8061068f610507565b6001600160a01b038581166000818152600193909301602090815260408085209388168086529382529384902094909455915184815290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610702610507565b60020154905090565b6000610715610507565b6001600160a01b039384166000908152600191909101602090815260408083209490951682529290925250205490565b6001600160a01b0383166107a95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610282565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610282565b6000610815610507565b6001600160a01b038516600090815260208290526040902054909150828110156108905760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610282565b6001600160a01b038086166000908152602084905260408082208685039055918616815290812080548592906108c7908490610dcc565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161091391815260200190565b60405180910390a35050505050565b600061092c61049e565b6002015460ff16919050565b6001600160a01b03821661098e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610282565b6000610998610507565b9050818160020160008282546109ae9190610dcc565b90915550506001600160a01b038316600090815260208290526040812080548492906109db908490610dcc565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106eb565b6000610a28610507565b6001600160a01b03909216600090815260209290925250604090205490565b6060610a5161049e565b600101805461054090610d7b565b6001600160a01b038216610abf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610282565b6000610ac9610507565b6001600160a01b03841660009081526020829052604090205490915082811015610b405760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610282565b6001600160a01b03841660009081526020839052604081208483039055600283018054859290610b71908490610de4565b90915550506040518381526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b828054610bc990610d7b565b90600052602060002090601f016020900481019282610beb5760008555610c31565b82601f10610c0457805160ff1916838001178555610c31565b82800160010185558215610c31579182015b82811115610c31578251825591602001919060010190610c16565b50610c3d929150610c41565b5090565b5b80821115610c3d5760008155600101610c42565b600060208083528351808285015260005b81811015610c8357858101830151858201604001528201610c67565b81811115610c95576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610cc257600080fd5b919050565b60008060408385031215610cda57600080fd5b610ce383610cab565b946020939093013593505050565b600080600060608486031215610d0657600080fd5b610d0f84610cab565b9250610d1d60208501610cab565b9150604084013590509250925092565b600060208284031215610d3f57600080fd5b61049782610cab565b60008060408385031215610d5b57600080fd5b610d6483610cab565b9150610d7260208401610cab565b90509250929050565b600181811c90821680610d8f57607f821691505b60208210811415610db057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ddf57610ddf610db6565b500190565b600082821015610df657610df6610db6565b50039056fea2646970667358221220bbae184025e8db752475c84a251674868a6e1fb205730409c4e62dc653a6d0af64736f6c634300080a0033';

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC20Mock> {
    return super.deploy(
      name,
      symbol,
      decimals,
      supply,
      overrides || {},
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals,
      supply,
      overrides || {},
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
