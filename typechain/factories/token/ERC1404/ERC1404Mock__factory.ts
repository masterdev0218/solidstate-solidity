/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1404Mock,
  ERC1404MockInterface,
} from '../../../token/ERC1404/ERC1404Mock';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8[]',
        name: 'errorCodes',
        type: 'uint8[]',
      },
      {
        internalType: 'string[]',
        name: 'errorMessages',
        type: 'string[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: '__mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'detectTransferRestriction',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'restrictionCode',
        type: 'uint8',
      },
    ],
    name: 'messageForTransferRestriction',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620015e0380380620015e08339810160408190526200003491620003cc565b6200006482826200004f6200006c60201b6200054c1760201c565b6200009060201b62000570179092919060201c565b5050620004f7565b7f30fbc5103dd3fe60574e239ab3dd8159b9545f7ba8dbbe0945026e3fffa33c2190565b8051825114620001165760405162461bcd60e51b815260206004820152604160248201527f455243313430343a207265737472696374696f6e436f64657320616e6420726560448201527f737472696374696f6e4d65737361676573206c656e677468206d69736d6174636064820152600d60fb1b608482015260a40160405180910390fd5b8260005b83518110156200019457828181518110620001395762000139620004a4565b6020026020010151826000868481518110620001595762000159620004a4565b602002602001015160ff1660ff16815260200190815260200160002090805190602001906200018a9291906200019b565b506001016200011a565b5050505050565b828054620001a990620004ba565b90600052602060002090601f016020900481019282620001cd576000855562000218565b82601f10620001e857805160ff191683800117855562000218565b8280016001018555821562000218579182015b8281111562000218578251825591602001919060010190620001fb565b50620002269291506200022a565b5090565b5b808211156200022657600081556001016200022b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000282576200028262000241565b604052919050565b60006001600160401b03821115620002a657620002a662000241565b5060051b60200190565b6000601f8381840112620002c357600080fd5b82516020620002dc620002d6836200028a565b62000257565b82815260059290921b85018101918181019087841115620002fc57600080fd5b8287015b84811015620003c05780516001600160401b0380821115620003225760008081fd5b818a0191508a603f830112620003385760008081fd5b85820151818111156200034f576200034f62000241565b62000362818a01601f1916880162000257565b915080825260408c818386010111156200037c5760008081fd5b60005b828110156200039c578481018201518482018a015288016200037f565b82811115620003ae5760008984860101525b50505084525091830191830162000300565b50979650505050505050565b60008060408385031215620003e057600080fd5b82516001600160401b0380821115620003f857600080fd5b818501915085601f8301126200040d57600080fd5b8151602062000420620002d6836200028a565b82815260059290921b840181019181810190898411156200044057600080fd5b948201945b838610156200047157855160ff81168114620004615760008081fd5b8252948201949082019062000445565b918801519196509093505050808211156200048b57600080fd5b506200049a85828601620002b0565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620004cf57607f821691505b60208210811415620004f157634e487b7160e01b600052602260045260246000fd5b50919050565b6110d980620005076000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101e7578063aa82e017146101fa578063d4ce14151461020d578063dd62ed3e1461022457600080fd5b806370a08231146101a65780637f4ab1dd146101b957806395d89b41146101cc578063a457c2d7146101d457600080fd5b806323b872dd116100d357806323b872dd14610151578063313ce56714610164578063395093511461017e5780633dc8ded71461019157600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610e85565b60405180910390f35b61012b610126366004610ef6565b610246565b604051901515815260200161010f565b61014361025c565b60405190815260200161010f565b61012b61015f366004610f20565b610286565b61016c61031e565b60405160ff909116815260200161010f565b61012b61018c366004610ef6565b61034b565b6101a461019f366004610ef6565b61040e565b005b6101436101b4366004610f5c565b61041c565b6101026101c7366004610f77565b610449565b610102610454565b61012b6101e2366004610ef6565b61045e565b61012b6101f5366004610ef6565b610522565b6101a4610208366004610ef6565b61052f565b61016c61021b366004610f20565b50600092915050565b610143610232366004610f9a565b610539565b606061024161066c565b905090565b600061025333848461071d565b50600192915050565b60006102417fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b65490565b600080610293853361084f565b9050828110156102fb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610308853385840361071d565b610313858585610887565b506001949350505050565b60006102417f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430495460ff1690565b336000908152600080516020611084833981519152602090815260408083206001600160a01b0386168452918290528220548381018111156103da5760405162461bcd60e51b815260206004820152602260248201527f4552433230457874656e6465643a2065786365737369766520616c6c6f77616e604482015261636560f01b60648201526084016102f2565b61031333868684018560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561071d565b6104188282610a72565b5050565b6001600160a01b038116600090815260008051602061106483398151915260205260408120545b92915050565b606061044382610b87565b6060610241610b9b565b336000908152600080516020611084833981519152602090815260408083206001600160a01b038616845291829052822054808411156104ee5760405162461bcd60e51b815260206004820152602560248201527f4552433230457874656e6465643a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b60648201526084016102f2565b61031333868684038560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561071d565b6000610253338484610887565b6104188282610bcc565b6000610545838361084f565b9392505050565b7f30fbc5103dd3fe60574e239ab3dd8159b9545f7ba8dbbe0945026e3fffa33c2190565b80518251146105f15760405162461bcd60e51b815260206004820152604160248201527f455243313430343a207265737472696374696f6e436f64657320616e6420726560448201527f737472696374696f6e4d65737361676573206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016102f2565b8260005b83518110156106655782818151811061061057610610610fcd565b602002602001015182600086848151811061062d5761062d610fcd565b602002602001015160ff1660ff168152602001908152602001600020908051906020019061065c929190610dec565b506001016105f5565b5050505050565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743047805461069a90610fe3565b80601f01602080910402602001604051908101604052809291908181526020018280546106c690610fe3565b80156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b5050505050905090565b6001600160a01b03831661077f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f2565b6001600160a01b0382166107e05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b6001600160a01b038381166000818152600080516020611084833981519152602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0391821660009081526000805160206110848339815191526020908152604080832093909416825291909152205490565b6001600160a01b0383166108eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f2565b6001600160a01b03821661094d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f2565b610958838383610d39565b6001600160a01b03831660009081526000805160206110648339815191526020819052604090912054828110156109e05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f2565b6001600160a01b03808616600090815260208490526040808220868503905591861681529081208054859290610a17908490611034565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a6391815260200190565b60405180910390a35050505050565b6001600160a01b038216610ac85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102f2565b610ad460008383610d39565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020611064833981519152918391600090610b17908490611034565b90915550506001600160a01b03831660009081526020829052604081208054849290610b44908490611034565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610842565b606061044382610b9561054c565b90610d45565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743047600101805461069a90610fe3565b6001600160a01b038216610c2c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016102f2565b610c3882600083610d39565b6001600160a01b0382166000908152600080516020611064833981519152602081905260409091205482811015610cbc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016102f2565b6001600160a01b03841660009081526020839052604081208483039055600283018054859290610ced90849061104c565b90915550506040518381526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b610d408383835b505050565b60ff81166000908152602083905260409020805460609190610d6690610fe3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9290610fe3565b8015610ddf5780601f10610db457610100808354040283529160200191610ddf565b820191906000526020600020905b815481529060010190602001808311610dc257829003601f168201915b5050505050905092915050565b828054610df890610fe3565b90600052602060002090601f016020900481019282610e1a5760008555610e60565b82601f10610e3357805160ff1916838001178555610e60565b82800160010185558215610e60579182015b82811115610e60578251825591602001919060010190610e45565b50610e6c929150610e70565b5090565b5b80821115610e6c5760008155600101610e71565b600060208083528351808285015260005b81811015610eb257858101830151858201604001528201610e96565b81811115610ec4576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ef157600080fd5b919050565b60008060408385031215610f0957600080fd5b610f1283610eda565b946020939093013593505050565b600080600060608486031215610f3557600080fd5b610f3e84610eda565b9250610f4c60208501610eda565b9150604084013590509250925092565b600060208284031215610f6e57600080fd5b61054582610eda565b600060208284031215610f8957600080fd5b813560ff8116811461054557600080fd5b60008060408385031215610fad57600080fd5b610fb683610eda565b9150610fc460208401610eda565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610ff757607f821691505b6020821081141561101857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110475761104761101e565b500190565b60008282101561105e5761105e61101e565b50039056fec991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b5a2646970667358221220faf8ffd9e7ca9f4aa785a7832b5d94567467de593fdc1933743a7dd7524816a164736f6c634300080a0033';

type ERC1404MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1404MockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1404Mock__factory extends ContractFactory {
  constructor(...args: ERC1404MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    errorCodes: BigNumberish[],
    errorMessages: string[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC1404Mock> {
    return super.deploy(
      errorCodes,
      errorMessages,
      overrides || {},
    ) as Promise<ERC1404Mock>;
  }
  override getDeployTransaction(
    errorCodes: BigNumberish[],
    errorMessages: string[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      errorCodes,
      errorMessages,
      overrides || {},
    );
  }
  override attach(address: string): ERC1404Mock {
    return super.attach(address) as ERC1404Mock;
  }
  override connect(signer: Signer): ERC1404Mock__factory {
    return super.connect(signer) as ERC1404Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1404MockInterface {
    return new utils.Interface(_abi) as ERC1404MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1404Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1404Mock;
  }
}
