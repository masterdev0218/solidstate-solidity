/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1271Stored,
  ERC1271StoredInterface,
} from '../../../signature/stored/ERC1271Stored';
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'magicValue',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class ERC1271Stored__factory {
  static readonly abi = _abi;
  static createInterface(): ERC1271StoredInterface {
    return new utils.Interface(_abi) as ERC1271StoredInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1271Stored {
    return new Contract(address, _abi, signerOrProvider) as ERC1271Stored;
  }
}
